resources:
- repo: self
#Multi-configuration and multi-agent job options are not exported to YAML. Configure these options using documentation guidance: https://docs.microsoft.com/vsts/pipelines/process/phases
jobs:

- job: 'Test'
  pool:
    vmImage: 'Ubuntu 16.04'
  strategy:
      matrix:
        Python27:
          python.version: '2.7'
        Python34:
          python.version: '3.4'
        Python35:
          python.version: '3.5'
        Python36:
          python.version: '3.6'
        Python37:
          python.version: '3.7'
      maxParallel: 5
  steps:
  - task: UsePythonVersion@0
    displayName: 'Use Python $(python.version)'
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - script: 'python -m pip install --upgrade pip'
    displayName: 'Update pip'

  - script: 'python -m pip install azure-iot-device'
    displayName: 'Install provisioning device SDK'

  - script: 'python -m pip install azure-iothub-provisioningserviceclient'
    displayName: 'Install provisioning service SDK'

  - script: 'python pytest test_scenario_simple_sync.py'
    displayName: 'Run Specified E2E Test with env variables'

    env:
      IOTHUB_CONNECTION_STRING: $(PYTHONPREVIEW-LINUX-IOTHUB-CONNECTION-STRING)
      IOTHUB_EVENTHUB_CONNECTION_STRING: $(PYTHONPREVIEW-LINUX-IOTHUB-EVENTHUB-CONNECTION-STRING)
      IOTHUB_CA_ROOT_CERT: $(PYTHONPREVIEW-LINUX-IOTHUB-CA-ROOT-CERT)
      IOTHUB_CA_ROOT_CERT_KEY: $(PYTHONPREVIEW-LINUX-IOTHUB-CA-ROOT-CERT-KEY)
      IOT_PROVISIONING_DEVICE_ENDPOINT: $(PYTHONPREVIEW-LINUX-DPS-DEVICE-ENDPOINT)
      STORAGE_CONNECTION_STRING: $(PYTHONPREVIEW-LINUX-STORAGE-CONNECTION-STRING)
      IOT_PROVISIONING_DEVICE_IDSCOPE: $(PYTHONPREVIEW-LINUX-DPS-ID-SCOPE)
      IOT_PROVISIONING_ROOT_CERT: $(PYTHONPREVIEW-LINUX-IOT-PROVISIONING-ROOT-CERT)
      IOT_PROVISIONING_ROOT_CERT_KEY: $(PYTHONPREVIEW-LINUX-IOT-PROVISIONING-ROOT-CERT-KEY)
      IOT_PROVISIONING_SERVICE_CONNECTION_STRING: $(PYTHONPREVIEW-LINUX-DPS-CONNECTION-STRING)
#      DPS_CONN_STRING_INVALID_CERT: $(DPS-CONN-STRING-INVALID-CERT)
#      DPS_GLOBAL_DEVICE_ENDPOINT_INVALID_CERT: $(DPS-GLOBAL-DEVICE-ENDPOINT-INVALID-CERT)
#      IOTHUB_CONN_STRING_INVALID_CERT: $(IOTHUB-CONN-STRING-INVALID-CERT)
#      IOTHUB_DEVICE_CONN_STRING_INVALID_CERT: $(IOTHUB-DEVICE-CONN-STRING-INVALID-CERT)

  - task: PublishTestResults@2
    displayName: 'Publish Test Results **/*-dps-e2e-test-results.xml'
    inputs:
      testResultsFiles: '**/*-dps-e2e-test-results.xml'
      testRunTitle: 'Python $(python.version)'
    condition: always()

